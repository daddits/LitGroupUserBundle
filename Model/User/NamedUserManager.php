<?php
/**
 * This file is part of the "LitGroupUserBundle" package.
 *
 * (c) Roman Shamritskiy <roman@litgroup.ru>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace LitGroup\Bundle\UserBundle\Model\User;
use LitGroup\Bundle\UserBundle\Storage\UserStorageInterface;
use LitGroup\Bundle\UserBundle\Util\Normalizer\EmailNormalizerInterface;
use LitGroup\Bundle\UserBundle\Util\Normalizer\UsernameNormalizerInterface;

/**
 * NamedUserManager
 *
 * @author Roman Shamritskiy <roman@litgroup.ru>
 */
class NamedUserManager extends UserManager implements NamedUserManagerInterface
{
    /**
     * @var UsernameNormalizerInterface
     */
    private $usernameNormalizer;

    public function __construct(
        UserStorageInterface $storage,
        $userClass,
        EmailNormalizerInterface $emailNormalizer,
        UsernameNormalizerInterface $usernameNormalizer
    )
    {
        $this->usernameNormalizer = $usernameNormalizer;
        parent::__construct($storage, $userClass, $emailNormalizer); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritDoc
     */
    public function findUserByUsername($username)
    {
        $canonicalUsername = $this->getUsernameNormalizer()->normalizeUsername($username);

        return $this->findUserBy(['usernameCanonical' => $canonicalUsername]);
    }

    /**
     * @inheritDoc
     */
    public function findUserByUsernameOrEmail($usernameOrEmail)
    {
        if (strpos($usernameOrEmail, '@')) {
            return $this->findUserByEmail($usernameOrEmail);
        } else {
            return $this->findUserByUsername($usernameOrEmail);
        }
    }

    public function updateCanonicalFields(UserInterface $user)
    {
        $usernameNormalizer = $this->getUsernameNormalizer();
        $user->setUsernameCanonical($usernameNormalizer->normalizeUsername($user->getUsername()));
        parent::updateCanonicalFields($user);
    }

    /**
     * Returns username normalizer.
     *
     * @return UsernameNormalizerInterface
     */
    protected function getUsernameNormalizer()
    {
        return $this->usernameNormalizer;
    }



} 